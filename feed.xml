<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Mohamed Allam</title><link>https://mohamedallam.tech/</link><description>Recent content on Mohamed Allam</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://mohamedallam.tech/feed.xml" rel="self" type="application/rss+xml"/><item><title>MariaDB: Docker compose and Docker run</title><link>https://mohamedallam.tech/blog/mariadb-docker-compose-and-docker-run/</link><pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/mariadb-docker-compose-and-docker-run/</guid><description>Lets see how MariaDb works in a docker container</description><content:encoded><![CDATA[<h1 id="running-mariadb-in-a-docker-container">Running MariaDB in a docker container</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">docker run -d <span class="se">\
</span><span class="se"></span>    --name my-mariadb <span class="se">\
</span><span class="se"></span>    -p 3306:3306 <span class="se">\
</span><span class="se"></span>    -v <span class="k">$(</span><span class="nb">pwd</span><span class="k">)</span>/mariadb/data/:/var/lib/mysql <span class="se">\
</span><span class="se"></span>    --user 1000:1000 <span class="se">\
</span><span class="se"></span>    -e <span class="nv">MYSQL_ROOT_PASSWORD</span><span class="o">=</span>password <span class="se">\
</span><span class="se"></span>    -e <span class="nv">MYSQL_PASSWORD</span><span class="o">=</span>password <span class="se">\
</span><span class="se"></span>    -e <span class="nv">MYSQL_USER</span><span class="o">=</span>admin <span class="se">\
</span><span class="se"></span>    -e <span class="nv">MYSQL_DATABASE</span><span class="o">=</span>database <span class="se">\
</span><span class="se"></span>    mariadb:latest
</code></pre></div><ul>
<li>
<p>The -d instructs docker container to run as a detached process. It run container in background and print container ID</p>
</li>
<li>
<p>-p is for port mapping. We are instructing the container to expose the container port externally. Container port 3306 is mapped to host port 3306. That means the service can be accessed through localhost:3306</p>
</li>
<li>
<p>The -v directive is used to mount volumes. In our case we are mounting the container volume /var/lib/mysql to host path ~/apps/mariadb/data. Containers are ephemeral devices that will contain its data for the time it is running. Once a container is stopped, its data is lost. Mounting volumes ensures that the data is added to a host path that can be reused when the container is restarted.</p>
</li>
<li>
<p>The &ndash;user argument is used to run the container with an arbitrary user (non root user). This happens if you need to run mysqld with a specific UID/GID.</p>
</li>
<li>
<p>The -e argument is for the environment variables. The supplied environment variables will be used to set up a Mariadb user, password and a database.</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">docker <span class="nb">exec</span> -it my-mariadb /bin/bash
</code></pre></div><p>We can see all containers running</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"> docker container ls
</code></pre></div><p>We can see even those who were stopped</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"> docker container ls -a
</code></pre></div><p>We take the container ID and we use that</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">docker restart <span class="s2">&#34;container-id&#34;</span>
</code></pre></div><h1 id="docker-compose">Docker compose</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">services:
  mariadb:
    image: mariadb:latest
    ports:
      - 3306:3306
    volumes:
      - ./mariadb/compose/:/var/lib/mysql
    environment:
        - <span class="nv">MYSQL_ROOT_PASSWORD</span><span class="o">=</span>password
        - <span class="nv">MYSQL_PASSWORD</span><span class="o">=</span>password
        - <span class="nv">MYSQL_USER</span><span class="o">=</span>admin
        - <span class="nv">MYSQL_DATABASE</span><span class="o">=</span>database
</code></pre></div><pre tabindex="0"><code>docker-compose up -d
</code></pre><ul>
<li>up brings up the container</li>
<li>-d in a detached mode</li>
</ul>
<p>Login the container bash</p>
<pre tabindex="0"><code>docker-compose exec mariadb /bin/bash
</code></pre>]]></content:encoded></item><item><title>Analytics tools: Google analytics vs the alternatives</title><link>https://mohamedallam.tech/blog/analytics-tools-google-analytics-alternatives-compared/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/analytics-tools-google-analytics-alternatives-compared/</guid><description>HGoogle Analytics is the most popular of the web analytics tools. But are there alternatives? What are they and how do they work?.</description><content:encoded><![CDATA[<h1 id="analytics-tools-google-analytics-vs-the-world">Analytics tools Google analytics vs the world</h1>
<p>Google Analytics can help you gain a great deal of insight into your Internet website, and its insights and information can help you make more informed marketing choices. However, if you&rsquo;re not a fan of the analytics tool or its features, there are numerous other choices available.</p>
<h2 id="what-are-website-analytics">What are website analytics?</h2>
<p>2005 ushered in a new era as more businesses turned to analytics tools, collecting data to help with their decision-making. Along with that came concerns regarding data storage, ownership and privacy. So tools started their journey</p>
<p>Website analytics tools allow website owners and developers to track the performance of their websites on a regular basis. In addition to measuring the number of visitors, pageviews, and unique users, these tools can also measure how much time site visitors spend on each page, what keywords are being used to find the site, and what marketing channels are being used to promote it.</p>
<p>Analytics tools also allow website owners to measure the effectiveness of their advertising efforts, and can offer suggestions for where to spend additional marketing funds.</p>
<p>Which is known as: Search Engine Optimization (SEO) is a method.</p>
<p>to increase the visibility of a website and its content in search engine results. It can be achieved through implementing certain keywords into web pages and creating broken links to pages that are relevant to those keywords.</p>
<h2 id="market-share">Market share</h2>
<p>35.2% of the websites use none of the traffic analysis tools that we monitor.</p>
<p>Google Analytics is used by 55.6% of all the websites, that is a traffic analysis tool market share of 85.9%.</p>
<p>Market share trends for traffic analysis tools</p>
<p><a href="https://w3techs.com/technologies/history_overview/traffic_analysis">This report shows the market share trends for traffic analysis tools since May 2021</a>.
<img src="Usage statistics of traffic analysis tools for websites.png" alt="Usage statistics of traffic analysis tools for websites"></p>
<p>We can find the share of <a href="https://w3techs.com/technologies/history_overview/traffic_analysis">market share trends for traffic analysis tools</a>.
<img src="Market share trends for traffic analysis tools.png" alt="Market share trends for traffic analysis tools">
<img src="Market share trends for traffic analysis tools Graph.png" alt="Market share trends for traffic analysis tools Graph"></p>
<h2 id="google-analytics">Google Analytics</h2>
<p>Google Analytics is a web analytics service offered by the giant: Google. It helps website owners understand how people are using their websites, what interests them, and how they can improve their website. By tracking the activities of website visitors, you can learn what content is most popular and which areas need more attention.</p>
<p>Google analytics is cool, but its not fast and it has some other issues, lets reconsider:</p>
<h2 id="paid">Paid</h2>
<p>We can find many other alternatives that paid, each has a unique selling proportion:</p>
<h3 id="heap">Heap</h3>
<p>Heap analyzes your complete dataset to quickly illuminate hidden insights so you can act with confidence. With Heap you can see and understand every single thing your users do.</p>
<h3 id="gauges">Gauges</h3>
<p>Real web analytics, Gauges is updated live as each view comes in. You never evenhave to refresh the dashboard. No more waiting for today’s metrics.</p>
<h3 id="fathom">Fathom</h3>
<p><strong>Fathom is a Google Analytics alternative that doesn’t compromise visitor privacy for data,</strong> We revolutionized website analytics by making them easy to use and respectful of privacy laws (like GDPR and more).</p>
<h2 id="free-and-open-source-software-foss">Free and Open source Software (FOSS)</h2>
<p>Many site owners have the habit of installing the Google Analytics tracking script on their sites as one of the first actions they take after the launch.</p>
<p>Here’s why you should break the habit of using Google Analytics and consider FOSS.</p>
<p>Open source software is software that is made available to the public for free so that people can see and change it. This way, anyone can make changes to the code, and the software can be improved over time as more people use it. Open source software is often used in place of expensive, proprietary software.</p>
<p>And as google dosen’t open source the tools, it actually gathers the data for other use purposes, so the data are the currency.</p>
<p>It’s 2022, big firms like <a href="https://www.euronews.com/my-europe/2021/11/10/google-loses-appeal-against-2-4-billion-eu-fine-over-its-shopping-service">Google</a> or <a href="https://techcrunch.com/2022/01/24/acm-apple-fine/">Apple</a> are suffering, so it’s big time to look after your privacy. Open Source obviously protects privacy out of the box.</p>
<p>So here is a break down of the most popular open source analytics tools, which offer roughly the same functionality.</p>
<p>Some free open source tools:</p>
<h3 id="matomo">Matomo</h3>
<p><a href="https://matomo.org/">Matomo</a>, a Google analytics alternative that protects your data and your customers privacy, Mamoto is a powerful web analytics platform that gives you 100% data ownership.</p>
<p><a href="https://matomo.org/">Matomo</a> is the leading open alternative to Google Analytics that gives you full control over your data. Matomo lets you easily collect data from websites &amp; apps and visualise this data and extract insights. Privacy is built-in. We love Pull Requests!</p>
<ul>
<li>Made with PHP 57% fo Matomo code uses PHP.</li>
<li>More than 16k stars</li>
<li>427 Watching</li>
</ul>
<p><a href="https://github.com/matomo-org/matomo">https://github.com/matomo-org/matomo</a></p>
<h3 id="plausible">Plausible</h3>
<p><a href="https://plausible.io/">Plausible</a> is lightweight and open source web analytics. No cookies and fully compliant with GDPR, CCPA and PECR. Made and hosted in the EU, powered by European-owned cloud infrastructure</p>
<p><a href="https://plausible.io/vs-google-analytics">Plausible script is les than 1KB</a>. (GA is 28Kb)</p>
<p>Which makes it more than 17 times smaller than the Google Analytics script and more than 45 times smaller than the recommended Google Analytics integration using the Google Tag Manager. By using Plausible Analytics, you will reduce your page weight and your site will load faster too.</p>
<p><a href="https://github.com/plausible/analytics">https://github.com/plausible/analytics</a></p>
<h3 id="umami">Umami</h3>
<p><a href="https://umami.is/">Umami</a> is a simple, easy to use, self-hosted web analytics solution. The goal is to provide you with a friendlier, privacy-focused alternative to Google Analytics and a free, open-sourced alternative to paid solutions. Umami collects only the metrics you care about and everything fits on a single page.</p>
<p><a href="https://github.com/mikecao/umami">https://github.com/mikecao/umami</a></p>
<h2 id="case-study">Case study</h2>
<p>Google analytics is blocked by so many web browsers, or adblocks, which gives using other alternatives a boost, also the self hosted ones most likely can have the script edited. to comply with any block. particularly when knowing this alternatives are this small.</p>
<p>As I have a <a href="http://laravelexample.com">Hashnode</a> blog, with both Google analytics and Plausible, we can actually see the difference and how inaccurate Google is. this results are from the 1st January 2022, to today 28 May 2022</p>
<h3 id="general">General</h3>
<ul>
<li>
<p>Plausible
<img src="Umami 1st January 2022.png" alt="Plausible analytics"></p>
</li>
<li>
<p>Google analytics
<img src="Google Analytics 1st January.png" alt="Google analytics"></p>
</li>
</ul>
<h3 id="page-visits">Page visits</h3>
<ul>
<li>
<p>Plausible
<img src="Page visits Umami.png" alt="Plausible analytics page visits"></p>
</li>
<li>
<p>Google analytics
<img src="Page visits google analytics.png" alt="Google analytics page visits"></p>
</li>
</ul>
<h3 id="geography">Geography</h3>
<ul>
<li>
<p>Plausible
<img src="Umami 1st January Geography.png" alt="Plausible analytics geography"></p>
</li>
<li>
<p>Google analytics
<img src="Google Analytics 1st January Geography.png" alt="Google analytics geography"></p>
</li>
</ul>
<h3 id="sources">Sources</h3>
<ul>
<li>
<p>Plausible
<img src="Source of traffic Umami.png" alt="Plausible source of traffic"></p>
</li>
<li>
<p>Google analytics
<img src="Source of traffic Google analytics.png" alt="Google analytics source of traffic"></p>
</li>
</ul>
]]></content:encoded></item><item><title>Golang missing function body or unexpected semicolon</title><link>https://mohamedallam.tech/blog/golang-missing-function-body/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/golang-missing-function-body/</guid><description>In this tutorial we learn how to fix two common Go syntax problems, and how to format the text properly.</description><content:encoded><![CDATA[<h1 id="golang-missing-function-body-or-unexpected-semicolon-">Golang missing function body or unexpected semicolon {</h1>
<h2 id="golang-functions">Golang functions</h2>
<p>One of the most beautiful things about Golang is formatting the code, internationally if you ever open any Golang code, you are looking to the same format, how cool is that?
Other programming languages has source code formatting</p>
<h2 id="missing-function-body-example">Missing function body example</h2>
<p>If we write a function with an open curly braces in a new line, we would have one of the this two errors.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go">
<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nb">println</span><span class="p">(</span><span class="s">&#34;Hello&#34;</span><span class="p">)</span>
<span class="p">}</span>
<span class="c1">/// main.go:5:6: missing function body for &#34;main&#34;
</span><span class="c1">// ./prog.go:6:2: syntax error: unexpected semicolon or newline before {
</span></code></pre></div><h2 id="fix-missing-function-body">Fix missing function body</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="nb">println</span><span class="p">(</span><span class="s">&#34;Hello&#34;</span><span class="p">)</span>
<span class="p">}</span>
<span class="c1">// Hello
</span></code></pre></div><p>For more informations, here is a <a href="https://go.dev/doc/faq#semicolons">Go.dev</a> link in the FAQ section, I quote:</p>
<h3 id="why-are-there-braces-but-no-semicolons-and-why-cant-i-put-the-opening-brace-on-the-next-line">Why are there braces but no semicolons? And why can&rsquo;t I put the opening brace on the next line?</h3>
<p>Go uses brace brackets for statement grouping, a syntax familiar to programmers who have worked with any language in the C family. Semicolons, however, are for parsers, not for people, and we wanted to eliminate them as much as possible. To achieve this goal, Go borrows a trick from BCPL: the semicolons that separate statements are in the formal grammar but are injected automatically, without lookahead, by the lexer at the end of any line that could be the end of a statement. This works very well in practice but has the effect that it forces a brace style. For instance, the opening brace of a function cannot appear on a line by itself.</p>
<p>Some have argued that the lexer should do lookahead to permit the brace to live on the next line. We disagree. Since Go code is meant to be formatted automatically by <code>[gofmt](https://go.dev/cmd/gofmt/)</code>, <em>some</em> style must be chosen. That style may differ from what you&rsquo;ve used in C or Java, but Go is a different language and <code>gofmt</code>&rsquo;s style is as good as any other. More important—much more important—the advantages of a single, programmatically mandated format for all Go programs greatly outweigh any perceived disadvantages of the particular style. Note too that Go&rsquo;s style means that an interactive implementation of Go can use the standard syntax one line at a time without special rules.</p>
]]></content:encoded></item><item><title>Golang variables everything you need to know</title><link>https://mohamedallam.tech/blog/golang-variables/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/golang-variables/</guid><description>In this long and detailed blog post we learn everything about variables in the Go programing language</description><content:encoded><![CDATA[<h1 id="variables">Variables</h1>
<aside>
💡 Variable declaration
Redeclaration and shadowing
Visibility
Naming conventions
Type conversion
</aside>
<h2 id="what-is-a-variable-in-general">What is a variable in general?</h2>
<p>A variable in programming is a data, that changes depending on certaing things, so certainly a variable will be stored in memory during certain cycle.</p>
<p>For example if we register a user, his name is a variable, we call name, and the value assigned to it, is his name.</p>
<p>Each user will have different name obviously, so that varies.</p>
<h2 id="why-data-type-exists">Why data type exists?</h2>
<p>So all users have names. and the name has a type of characters. so a name is sequence of letters, John, Jane or Johny ..ect however he unlikely has a name of 007 right.</p>
<p>An age however, is generally a sequence of digits  4, 18, 67 years old.</p>
<p>This lead us to understand, age is integer, and name is a string. there is some other types.</p>
<h3 id="bonus">Bonus</h3>
<p>Our software will hold plenty of variables of so many types, however we often use them in certain level, or scope. you dont want the variables hanging, accessible and editable everywhere. thats why in programming often, the variables has a scope declaration, which dictates the boundaries of this particular variable. (private, public, global..ect)</p>
<aside>
💡 Off Go topic but in programming in general
- We need a combination of freedom to do things, but certain rules help us stay consice. in a way we have helpful restrictions.
- Imagine we have cars, but we don’t have a law of traffic, then you can drive in any direction at any speed in any manner, how horrible driving a car experience will be?
I am sure you would still manage to move from A to be B eventually but how if we have certain rules to keep you safe.
- Each programming language or framework will try to keep you safe in its way, and there is further arbitrary things you or your tech leder will decide upon.
</aside>
<aside>
💡 We can show hello world and go from there trying to print out something different
</aside>
<h2 id="how-to-declare-a-variable-in-go">How to declare a variable in Go</h2>
<p>To declare a variable in Golang, there is 3 ways of declarations, one thing to consider is that always a variable will have a predefined type, otherwise our compiler will yell at us.</p>
<p>The declaration will be a combination of:</p>
<ul>
<li>The keyword var, which stands for variable obviously.</li>
<li>An arbitrary name (ex: i, age, phoneNumber).</li>
<li>Variable type which can be String, Integer, Float..ect or we can let the compiler detect the type at compile time.</li>
<li>Optionally we can initiliase the variable instantly, or sometimes we declare a variable, differently from initialising it. (bear in mind, every variable has to be used).</li>
</ul>
<p>Here is an example of a variable declaration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&#34;John&#34;</span>
<span class="kd">var</span> <span class="nx">age</span> <span class="kt">int</span>
<span class="nx">age</span> <span class="p">=</span> <span class="mi">30</span>
<span class="nx">country</span> <span class="o">:=</span> <span class="s">&#34;DZ&#34;</span>
</code></pre></div><aside>
💡 Var keyword refers to variables in Golang
</aside>
<h2 id="golang-print-a-variable">Golang print a variable</h2>
<p>Golang has variety of ways and functions to print a variable, but for our learning purposes we will see two ways, using the FMT package, or the built in function</p>
<p>We can use <code>println</code> function from the built in functions, to print variables in a single line, or we can use the package FMT, which provides many other tools including printing the value within a string, or getting the type to see what we are working with.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&#34;John&#34;</span>
	<span class="kd">var</span> <span class="nx">age</span> <span class="kt">int</span>
	<span class="nx">age</span> <span class="p">=</span> <span class="mi">30</span>
	<span class="nx">country</span> <span class="o">:=</span> <span class="s">&#34;DZ&#34;</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">country</span><span class="p">)</span>
	<span class="nb">println</span><span class="p">(</span><span class="nx">age</span><span class="p">)</span>
	<span class="nb">print</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
<span class="p">}</span>
<span class="c1">//DZ
</span><span class="c1">//30
</span><span class="c1">//John
</span><span class="c1">//Program exited.
</span></code></pre></div><h2 id="go-reads-up-to-bottom">Go reads up to bottom</h2>
<p>In Go code, the program reads up to down, means if we set a variable to a value, than set it again, the bottom variable will override the other one.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">age</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">40</span>
<span class="nx">age</span> <span class="p">=</span> <span class="mi">30</span>
<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">age</span><span class="p">)</span> <span class="c1">// 30
</span></code></pre></div><h2 id="the-three-forms-of-declaration-and-assignment-of-value-to-them">The three forms of declaration and assignment of value to them</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&#34;John&#34;</span> <span class="c1">// we declare variable, data type, and initialise it with a value.
</span><span class="c1"></span><span class="kd">var</span> <span class="nx">name</span> <span class="o">:=</span> <span class="s">&#34;John&#34;</span> <span class="c1">// we declare variable and its value, we let the compiler detect the type.
</span><span class="c1"></span><span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span> <span class="c1">// we only declare variable ***name*** and its type. which is ***string***.
</span><span class="c1"></span><span class="nx">name</span> <span class="p">=</span> <span class="s">&#34;Jane&#34;</span> <span class="c1">// we assign the value Jane to the variable.
</span></code></pre></div><p>Initially we don’t want to be more verbose than we have to, therefor we would generally use the shortest version, however at times we would need to use the inline one as we want to precise the variable type.</p>
<p>Lastly the two lines declaration and assignment is used when we dont want to assign the value upfront, and we would assign that later in our code.</p>
<p>This three declarations are identical.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">age</span> <span class="kt">int</span>
<span class="nx">age</span> <span class="p">=</span> <span class="mi">30</span>
<span class="kd">var</span> <span class="nx">age</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">30</span>
<span class="nx">age</span> <span class="o">:=</span> <span class="mi">30</span>
</code></pre></div><h3 id="type-inference-and-short-variable-declaration">Type inference and short variable declaration</h3>
<p>Often in Go lang we use the short form variable declaration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">age</span> <span class="o">:=</span> <span class="mi">30</span>
</code></pre></div><p>Go uses type inference to determine what type of data it’s working with. data types only need to be provided in certain circumstances, compiler is always making sure what we type is correct, otherwise we get a compiler error, which provides type safety to us.</p>
<p>Its possible that data is invalid for the given type only if</p>
<ul>
<li>We deal with user inputs</li>
<li>Manually manipulate the binary data (pointers)</li>
</ul>
<h2 id="data-type-declaration">Data type declaration</h2>
<p>Sometimes we need control over declaring a variable data type and other times we just want to delegate to the complier do that for us.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&#34;john&#34;</span>
<span class="kd">var</span> <span class="nx">name</span> <span class="o">:=</span> <span class="s">&#34;john&#34;</span>
</code></pre></div><p>This two lines of code are identical. its where we declare a variable called name, with string type, and value john.</p>
<p>However in first one, we explicitly declare the variable type.</p>
<p>The second one, we delegate to the complier our friend to do the job for us. This is more used when you are experienced.</p>
<aside>
💡 Quotes is how to write a string in Golang. so Go knows its not a keyword we want to use or a function..ect
For example 42, and “42” dosent mean the same thing, the first one is for integers, and the second one is for strings.
</aside>
<p>There is more details about variables data types in <a href="https://golangbyexample.com/all-data-types-in-golang-with-examples/">here</a>. (<a href="https://golangbyexample.com/all-data-types-in-golang-with-examples/">https://golangbyexample.com/all-data-types-in-golang-with-examples/</a>)</p>
<h3 id="type-of-variables">Type of variables</h3>
<p>In general a variable can be:</p>
<ul>
<li>boolean</li>
<li>integer</li>
<li>float</li>
<li>complex</li>
<li>String</li>
<li>Rune</li>
<li>Array</li>
<li>Map</li>
<li>…ect</li>
</ul>
<h2 id="when-to-use-each-syntax">When to use each syntax?</h2>
<ul>
<li>The first format, is what we do when we want to declare a variable but we are not ready to initialize it yet.</li>
<li>We use the second format, when we think Go will mistake in the type, so we want to give precise data type, example if we write:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">price</span> <span class="o">:=</span> <span class="mi">9</span>
<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, $T&#34;</span><span class="p">,</span> <span class="err">$</span><span class="nx">j</span><span class="p">,</span> <span class="err">$</span><span class="nx">j</span><span class="p">)</span> <span class="c1">// 9, int
</span><span class="c1">// correct one
</span><span class="c1"></span><span class="nx">price</span> <span class="kt">float32</span> <span class="p">=</span> <span class="mi">9</span>
<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, $T&#34;</span><span class="p">,</span> <span class="err">$</span><span class="nx">j</span><span class="p">,</span> <span class="err">$</span><span class="nx">j</span><span class="p">)</span> <span class="c1">// 9, float32
</span></code></pre></div><p>obviously Go will see this as an integer, while we might want it to be a floating number. therefor we would have to declare the type upfront in this case.</p>
<ul>
<li>For other cases where Go will be correct in figuring out the variable data type.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="c1">//1 Generally when we want to declarer a variable but we are not ready just yet to initilise it yet. like maybe we declare the variable in a function, but we assign the value within a loop inside the function.
</span><span class="c1"></span><span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span>
<span class="nx">name</span> <span class="p">=</span> <span class="err">&#34;</span><span class="nx">john</span>

<span class="c1">//2 this is probably most common one, as we let the complier help us, define the data type, and initialise the variable with a value.
</span><span class="c1"></span><span class="nx">k</span> <span class="o">:=</span> <span class="mi">9</span>

<span class="c1">//3 We use this expressive syntax when we have granular control over our variables.
</span><span class="c1"></span><span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">42</span>
</code></pre></div><h2 id="variable-declaration-outside-a-function-level">Variable declaration outside a function level</h2>
<p>If we want to declare a variable outside a function we cant use the shorthanded declaration, we would need to define the data type upfront.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">age</span> <span class="nx">integer</span> <span class="p">=</span> <span class="mi">42</span>
</code></pre></div><h3 id="variable-block">Variable block</h3>
<p>Lets say we have a bunch of variable declarations in a package level.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>

<span class="kd">var</span> <span class="nx">name</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&#34;Mohamed&#34;</span>
<span class="kd">var</span> <span class="nx">age</span> <span class="nx">integer</span> <span class="p">=</span> <span class="mi">30</span>
<span class="kd">var</span> <span class="nx">hourlyRate</span> <span class="kt">float32</span> <span class="p">=</span> <span class="mf">49.99</span>
</code></pre></div><p>This is making things little bit cluttered, we can use another syntax for this</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="p">(</span>
	<span class="nx">name</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&#34;Mohamed&#34;</span>
	<span class="nx">age</span> <span class="nx">integer</span> <span class="p">=</span> <span class="mi">30</span>
	<span class="nx">hourlyRate</span> <span class="kt">float32</span> <span class="p">=</span> <span class="mf">49.99</span>
<span class="p">)</span>
</code></pre></div><h3 id="declare-multiple-variables"><strong>declare multiple variables</strong></h3>
<p>Many times, we find ourselves needing to declare or even initialise multiple variables, there is a shorthand for that as well</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">email</span> <span class="kt">string</span>
<span class="kd">var</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">j</span> <span class="p">=</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span> <span class="c1">// 10 int, 20 int
</span><span class="c1"></span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">j</span> <span class="p">=</span> <span class="s">&#34;q&#34;</span><span class="p">,</span> <span class="mi">20</span> <span class="c1">//10 int, &#34;q&#34; string
</span></code></pre></div><h2 id="shadowing">Shadowing</h2>
<p>given we declare a same variable in the package level, than we redeclare it, at a function level.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">50</span>

<span class="kd">func</span> <span class="nf">main</span> <span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">20</span>
	<span class="nx">i</span> <span class="o">:=</span> <span class="mi">30</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>This will cause us an error, we cant redeclare a variable in the same scope, or level, so here the main function cant have two declaration, but we can of course can assign a value to it <code>i = 30</code></p>
<p>The variable with the most intermost scope actually takes precedence. this is called shadowing.</p>
<h2 id="the-default-value-of-a-variable">The default value of a variable</h2>
<p>Go focuses on integrity. One way is the concept of zero value, any variable will have a value in memory, so as soon as we declare a variable it will have a zero value.</p>
<ul>
<li>Integers and floats to 0</li>
<li>Boolean to false</li>
<li>String to empty space not nil or null “”</li>
</ul>
<aside>
💡 The fmt pacakge is official package, that allow us to print things to screen in different ways and forms
</aside>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">()</span> <span class="c1">// prints in a new line
</span><span class="c1"></span><span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">()</span> <span class="c1">//print whateverr we give it
</span><span class="c1"></span><span class="o">%</span><span class="nx">v</span><span class="p">,</span> <span class="nx">theValue</span> <span class="c1">// We can use the $v as a placeholder, then set the value variable
</span><span class="c1"></span><span class="o">%</span><span class="nx">T</span><span class="p">,</span> <span class="nx">theType</span> <span class="c1">// we can do the same with %T, except its to print the type of a variable
</span></code></pre></div><h3 id="case-sensitive-variables">Case sensitive variables</h3>
<p>In Go, variables are case sensitive it means, if we have two variables with different upper and lower cases, it would mean they are two different variables</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">20</span>
	<span class="kd">var</span> <span class="nx">I</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">10</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">I</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h2 id="naming-convention-and-visibility-of-golang-variables">Naming convention and visibility of Golang variables</h2>
<p>There is two rules of thumb:</p>
<ul>
<li>Naming convention controls the visibility, the first letter of variable defines wether its global or local, lower case first letter (aka camel case) are scoped to the package they are declared in, Upper case first letter (aka Pascale case) exposes the variable to the outside scope they become global. The three levels of visibility in Golang
<ul>
<li>Package level scope if its lower case, so any file under the same package can access the variable,</li>
<li>If its upper case in the package, it becomes globally visible</li>
<li>Block scope so if its in a loop or a function..ect</li>
</ul>
</li>
<li>The name of the variable is affected by the lifespan of the variable, if its going to be used for long then be as descriptive as possible, but dont go over 50 letters or so, However if you just need it where you will use it, then feel free to minimize the length.</li>
<li>When you use acronyms, like HTTP, or URL URI..ect keep those all upper case.</li>
</ul>
<h3 id="what-about-not-using-a-variable-in-its-declaration-block">What about not using a variable in its declaration block?</h3>
<p>Golang complier, obliges us to use the variables, otherwise we would be yelled at.
So bear in mind that whenever you declare a variable you have to use it in its scope, or the interscopes, otherwise the complier will complain.</p>
<p>This is pretty valuable to keep our code concise and get rid of junk or unused code</p>
<h2 id="how-to-convert-a-type-of-a-variable">How to convert a type of a variable</h2>
<p>Given we initialize a variable, but later we decide to change its type, by passing in another variable with a different type.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">21</span>
<span class="kd">var</span> <span class="nx">j</span> <span class="kt">float32</span>
<span class="nx">j</span> <span class="p">=</span> <span class="nx">i</span>  <span class="c1">// this should mean j = 21
</span></code></pre></div><p>This can be done, however at times we want to do the opposite, so then we need to explicitly do that, otherwise the complier would yell at us, as he dont want use to loose information.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">a</span> <span class="kt">float32</span> <span class="p">=</span> <span class="mf">43.5</span>
<span class="kd">var</span> <span class="nx">b</span> <span class="kt">int</span>
<span class="nx">b</span> <span class="p">=</span> <span class="nx">a</span> <span class="c1">// this gives error, because the integer will only take 43
</span><span class="c1"></span><span class="nx">b</span> <span class="p">=</span> <span class="nb">int</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="c1">//work around but keep in mind you have to be responsible to loose information
</span></code></pre></div><p>If you want to convert between an integer and a string, you will have to use the package “strconv” because in Golang strings are alias for bytes</p>
<p>From integer to float which is fine</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">main</span> <span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">911</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">i</span> <span class="p">)</span> <span class="c1">//911, int
</span><span class="c1"></span>
	<span class="kd">var</span> <span class="nx">j</span> <span class="kt">float32</span>
	<span class="nx">j</span> <span class="p">=</span> <span class="nb">float32</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">j</span><span class="p">,</span> <span class="nx">j</span> <span class="p">)</span> <span class="c1">//911, float32
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div><p>We can also do</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">main</span> <span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">i</span> <span class="kt">float32</span> <span class="p">=</span> <span class="mi">911</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">i</span> <span class="p">)</span> <span class="c1">//911, float32
</span><span class="c1"></span>
	<span class="kd">var</span> <span class="nx">j</span> <span class="kt">int</span>
	<span class="nx">j</span> <span class="p">=</span> <span class="nb">int</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">j</span><span class="p">,</span> <span class="nx">j</span> <span class="p">)</span> <span class="c1">//911, int
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div><p>If we try <code>j = i</code>, isntead this wont work, because go wont risk of loosing information, because the float might have a decimal on it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">j</span> <span class="p">=</span> <span class="nb">float32</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
<span class="c1">// it can be
</span><span class="c1"></span><span class="nx">j</span> <span class="p">=</span> <span class="nx">i</span>
</code></pre></div><p>If we try to convert an integer to a string, it wont work  unless we use a package strconv.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">main</span> <span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">911</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">i</span> <span class="p">)</span> <span class="c1">//911, int
</span><span class="c1"></span>
	<span class="kd">var</span> <span class="nx">j</span> <span class="kt">string</span>
	<span class="nx">j</span> <span class="p">=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nf">Itoa</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">j</span><span class="p">,</span> <span class="nx">j</span> <span class="p">)</span> <span class="c1">//911, string
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div><p>If we just use the regular one, Go would think its a slice and will give is some charachter matching the slice value of the given index (40 in this case)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">40</span>
<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">i</span> <span class="p">)</span> <span class="c1">//40, int
</span><span class="c1"></span>
<span class="kd">var</span> <span class="nx">j</span> <span class="kt">string</span>
<span class="nx">j</span> <span class="p">=</span> <span class="nb">string</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;%v, %T&#34;</span><span class="p">,</span> <span class="nx">j</span><span class="p">,</span> <span class="nx">j</span> <span class="p">)</span> <span class="c1">//(, string
</span></code></pre></div><h3 id="all-variables-are-zero-valued">All variables are zero valued</h3>
<p>This means whenever we declare a varaible it has a value, its not null/nil therefor if its a numeric type its 0, if its a string its “”. false for booleans, nil for interfaces, so all variables have a value.</p>
<p>For example s string is an empty string, which wont create errors or unpredictable behaviour.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">s</span> <span class="kt">string</span>
<span class="nx">fmt</span><span class="p">.</span><span class="nf">PrintLn</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="c1">// &#34;&#34;
</span></code></pre></div><h3 id="common-syntax">Common syntax</h3>
<p>Sometimes we encouter a situation where something should return two variables, not just one.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
</code></pre></div><p>This would return f, and error. however if in some cases we just want to ignore the error, we can use the underscore, which will ignore whats returned and avoids memory allocation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
</code></pre></div><h3 id="have-to-be-used">Have to be used</h3>
<p>If you declare a variable and dont use it, the compiler will yell at us, we always need to use any variable we declare.</p>
<p>We can declare a variable and not use it in its scope, we would definitely see the compiler yelling at us:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">main</span> <span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">i</span> <span class="kt">string</span>
<span class="p">}</span>
<span class="c1">// go run main.go
</span><span class="c1"></span> <span class="nx">i</span> <span class="nx">declared</span> <span class="nx">but</span> <span class="nx">not</span> <span class="nx">used</span>
</code></pre></div><h3 id="acronyms">Acronyms</h3>
<p>Best practice in Go lang we use upper case for better readability.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">HTTPRequest</span><span class="p">,</span> <span class="nx">URL</span>
</code></pre></div>]]></content:encoded></item><item><title>Blogging for developers</title><link>https://mohamedallam.tech/blog/blogging/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/blogging/</guid><description>How blogging can help your IT journey</description><content:encoded><![CDATA[<p>Let me lay some ground here. Did you know that people are <a href="https://ernestoolivares.com/2013/01/11/we-are-90-visuals-beings/">90% visual beings</a> and that blog articles with images <a href="https://www.jeffbullas.com/6-powerful-reasons-why-you-should-include-images-in-your-marketing-infographic/">get 94% more views</a>. But the visual asset that is exploding right now and will make up to <a href="https://techcrunch.com/2017/06/08/cisco-ip-traffic-shoots-up-to-3-zettabytes-by-2021-video-will-be-80-of-it/">80% of all online traffic by 2021</a> is video!</p>
<p>To stand out, it is time to start a blog on YouTube or, at least, embed video content into your text posts. The first tactic will help to get more traffic (I bet you know that <a href="https://tubularinsights.com/youtube-google-search-results/">55% of all Google search</a> results contain videos), and the second one will give your blog a dwell time boost.</p>
<p>Looking For Reliable Blogging Advice? Read This!</p>
<p>Blogs have a profound effect on people&rsquo;s lives. Blogging can be a tool that will be useful for everyday people to influence the world with a large audience. Read this article to learn more about how to make blogging successfully.</p>
<p>Don&rsquo;t ever make blogging your life all about blogging. If you do not give yourself time to do things away from you computer, you can easily burn out. Take scheduled walks, call a friend or take a quick break for a few minutes. Taking some time off will allow you return refreshed and ready to write.</p>
<p>Make sure your posts are brief and concise. While you want lots of great content, going on and on will likely lose the interest of your readers. Blog readers do not require detailed and other unnecessary information.They want to get to the heart of the post.</p>
<p>Ask already established bloggers to write guest posts for your blog. This will increase the amount of quality content on your site. You may also glean additional traffic if the other blogger alerts their readers of their appearance on your blog. You can create more content for your blog if you can add several good guest writers.</p>
<p>Make sure to post content regularly to keep your readership. The majority of the most successful blogs have regular content posted to them at least once per day.If you don&rsquo;t think you can do this, try to come up with a few weeks' worth of writing prior to taking your blog live. This helps to make posts for days that you do not have time to develop content or are having difficulty coming up with content.</p>
<p>Use the constructive criticism to make improvements to your blog. If you receive any negative or destructive criticisms, simply respond politely and do not engage further.</p>
<p>If you want to increase your blog&rsquo;s traffic, it&rsquo;s critical that you concentrate on writing good content. Users are more likely to become repeat visitors when you post high-quality content that they find to be honest and high quality content.</p>
<p>Don&rsquo;t write a lot of content. You want to make certain you are doing research the right theme for your blog.</p>
<p>You should always be researching, researching and approaching it as a business. Learn new tricks from experienced bloggers, and use the different techniques and strategies that you have learned. Continuously improving and learn about new blogging methods that will help you move forward.</p>
<p>The easier it is for people to find your blog, the larger readership you will have. Use the tips here to help your blog gain readership numbers.</p>
<p>Research every topic fully that you wish to post on it. You must also need to have sufficient mastery of the topic to respond to comments.</p>
<p>Are you trying to establish your brand or become someone that people view as skilled in a certain field? Maybe what you want to make money. Maybe you have a variety of these things. You must fully understand what your goals are and then design your blog accordingly.</p>
<p>Make sure that you have a page set up where people can contact you. This lets visitors to be able to contact you with any questions or comments. Your readers can come from anywhere, so give them a way to share.</p>
<p>It is important to use the correct font size when creating your blog. You want something with balance, but you also do not want to use a font that is too small, so readers feel comfortable viewing it.</p>
<p>Try to keep each blog that you make about one topic. This is a simple yet effective tip for making your blogs easier to read.</p>
<p>Since most web surfers are lazy and don&rsquo;t like to read a lot of content, make sure your articles stand out. This can be accomplished in a number of ways using attention grabbing headings with bold type. Bullet points are also great too for attracting attention.</p>
<p>Make use of tabbed zones for the articles you want to recommend or highlight. The area right before sidebars is a hot zone as well. You may create your own tabbed zone that will contain the articles you feel are important for each category. This allows you to see what kind of content your blog hosts and will increase the visitor count for your highest-quality articles.</p>
<p>Don&rsquo;t forget to look to current events if you want to interest the people reading your blog.Find stories that are complementary or relevant to your blog. For example, if you have a blog about dog training, you may wish to post news about dog shows or the results from dog competitions. This will be pertinent information is likely of interest to your readers.</p>
<p>Don&rsquo;t cram your blogs with too many keywords. Selecting effective keywords is a vital part of blogging, but a few good keywords far outweighs tons of less-targeted ones.Search engines these days are even more apt to analyze content. When you use too many keywords on your site, it flags the search engines and tells them that quality content is not your first priority, and your blog&rsquo;s ranking will probably suffer. Choose precise keywords that have been proven themselves to attract web traffic.</p>
<p>As your site becomes more accessible to many people through links, you must make sure to keep up with what is working and not working on your site. Try out different things to see what works best on your site so your blog can reach it&rsquo;s full potential.</p>
<p>Use your existing social networking accounts to let people aware that you are writing a blog. Ask about sharing this information with their network to reach many more people. Using your own social network account is preferable because users have more confidence in interacting with an actual person.</p>
<p>You should have found the tips you just read helpful regardless of the reason you maintain a blog. Use the tips that work for your purposes, and always create the quality content that people will want to read for years to come.</p>
]]></content:encoded></item><item><title>Algeria’s LinkedIn, online population and other statistics</title><link>https://mohamedallam.tech/blog/algeria-linkedin-online-population/</link><pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/algeria-linkedin-online-population/</guid><description>How many Algeria users are there on the LinkedIn userbase, and how that reflects over the entire population.</description><content:encoded><![CDATA[<h1 id="algeria-online">Algeria online</h1>
<h1 id="algerias-linkedin-online-population-and-other-stats">Algeria’s LinkedIn, online population and other stats</h1>
<p>In October 2020, there were 14 million jobs listed on LinkedIn, According to LinkedIn, over 100 million job applications are sent each month.</p>
<p>Only three percent of members post more than once a week, although over 40 million apply for jobs once a week.</p>
<p>Lets lay down some basics here:</p>
<ul>
<li>Algeria’s total population was <strong>44.98 million</strong> in January 2022.</li>
<li>Data show that Algeria’s population <strong>increased</strong> by <strong>750 thousand</strong> (+1.7 percent) between 2021 and 2022.</li>
<li>The median age of the population in Algeria is <strong>29.0</strong>.</li>
</ul>
<h2 id="algerias-population-by-age">Algeria’s population by age</h2>
<p>With the median age of the population in Algeria is <strong>29.0</strong>.</p>
<p>Algerians between 18 and 50, are the half of the entire Algerian population, so roughly 22.49 million.</p>
<h1 id="internet-use-in-algeria">Internet use in Algeria</h1>
<ul>
<li>There were <strong>27.28 million</strong> internet users in Algeria in January 2022.</li>
<li><strong><a href="https://kepios.com/?utm_source=DataReportal&amp;utm_medium=Country_Article_Hyperlink&amp;utm_campaign=Digital_2022&amp;utm_term=Algeria&amp;utm_content=Kepios_Home_Link">Kepios</a></strong> analysis indicates that internet users in Algeria <strong>increased</strong> by <strong>1.8 million</strong> (+7.3 percent) between 2021 and 2022.</li>
</ul>
<h2 id="internet-speed">Internet speed</h2>
<ul>
<li>Median mobile internet connection speed via cellular networks: <strong>11.44 Mbps</strong>.</li>
<li>Median fixed internet connection speed: <strong>9.78 Mbps</strong>.</li>
</ul>
<p>Ookla’s data reveals that the median mobile internet connection speed in Algeria <strong>increased</strong> by <strong>3.58 Mbps</strong> (+45.5 percent) in the twelve months to the start of 2022.</p>
<p>Meanwhile, Ookla’s data shows that fixed internet connection speeds in Algeria <strong>increased</strong> by <strong>6.16 Mbps</strong> (+170 percent) during the same period.</p>
<h2 id="social-media-statistics-for-algeria-in-2022"><strong><strong>Social media statistics for Algeria in 2022</strong></strong></h2>
<p>There were <strong>26.60 million</strong> social media users in Algeria in January 2022.</p>
<p>The number of social media users in Algeria at the start of 2022 was equivalent to <strong>59.1 percent</strong> of the total population, but it’s important to note that social media users may <strong>not</strong> represent unique individuals (see our detailed <strong><a href="https://datareportal.com/notes-on-data?utm_source=DataReportal&amp;utm_medium=Country_Article_Hyperlink&amp;utm_campaign=Digital_2022&amp;utm_term=Algeria&amp;utm_content=Notes_On_Data">notes on data</a></strong> to learn why).</p>
<p><strong><a href="https://kepios.com/?utm_source=DataReportal&amp;utm_medium=Country_Article_Hyperlink&amp;utm_campaign=Digital_2022&amp;utm_term=Algeria&amp;utm_content=Kepios_Home_Link">Kepios</a></strong> analysis reveals that social media users in Algeria <strong>increased</strong> by <strong>1.6 million</strong> (+6.4 percent) between 2021 and 2022.</p>
<h2 id="facebook-instagram-snapshot-users-in-algeria-in-2022"><strong><strong>Facebook, Instagram, Snapshot users in Algeria in 2022</strong></strong></h2>
<p>Facebook more people and half Algeria’s population, Snapshot head to head with Instagram if not better.</p>
<h3 id="facebook">Facebook</h3>
<p>Data published in Meta’s advertising resources indicates that <strong>Facebook</strong> had <strong>22.45 million</strong> users in Algeria in early 2022.</p>
<p>The company’s revised audience figures mean that Facebook’s ad reach in Algeria was equivalent to <strong>49.9 percent</strong> of the total population at the start of 2022.</p>
<p>However, Facebook restricts the use of its platform to people aged 13 and above, so it’s also worth highlighting that <strong>68.7 percent</strong> of the “eligible” audience in Algeria uses Facebook in 2022.</p>
<p>For additional context, Facebook’s ad reach in Algeria was equivalent to <strong>82.3 percent</strong> of the local internet user base (regardless of age) in January 2022.</p>
<h3 id="instagram">Instagram</h3>
<p>Numbers published in Meta’s advertising tools indicate that <strong>Instagram</strong> had <strong>8.60 million</strong> users in Algeria in early 2022.</p>
<p>This figure suggests that Instagram’s ad reach in Algeria was equivalent to <strong>19.1 percent</strong> of the total population at the start of the year.</p>
<p>However, Instagram restricts the use of its platform to people aged 13 and above, so it’s helpful to know that <strong>26.3 percent</strong> of the “eligible” audience in Algeria uses Instagram in 2022.</p>
<p>It’s also worth noting that Instagram’s ad reach in Algeria at the start of 2022 was equivalent to <strong>31.5 percent</strong> of the local internet user base (regardless of age).</p>
<h3 id="snapshot">Snapshot</h3>
<p>Data published in Snap’s advertising resources indicate that <strong>Snapchat</strong> had <strong>6.25 million</strong> users in Algeria in early 2022.</p>
<p>This figure means that Snapchat’s ad reach in Algeria was equivalent to <strong>13.9 percent</strong> of the total population at the start of the year.</p>
<p>However, Snapchat restricts the use of its platform to people aged 13 and above, so it’s also worth noting that <strong>19.1 percent</strong> of the “eligible” audience in Algeria uses Snapchat in 2022.</p>
<p>For additional context, Snapchat’s ad reach in Algeria was equivalent to <strong>22.9 percent</strong> of the local internet user base (regardless of age) at the start of the year.</p>
<h3 id="the-rest">The rest</h3>
<p>Messenger</p>
<p>Data published in Meta’s advertising resources indicate that ads on <strong>Facebook Messenger</strong> reached <strong>14.25 million</strong> users in Algeria in early 2022.</p>
<p>The company’s revised audience numbers suggest that Facebook Messenger’s ad reach in Algeria was equivalent to <strong>31.7 percent</strong> of the total population at the start of the year.</p>
<p>For additional context, Facebook Messenger’s ad reach in Algeria is equivalent to <strong>52.2 percent</strong> of the local internet user base (regardless of age).</p>
<p>Twitter</p>
<p>Numbers published in Twitter’s advertising resources indicate that <strong>Twitter</strong> had <strong>891.5 thousand</strong> users in Algeria in early 2022.</p>
<p>This figure means that Twitter’s ad reach in Algeria was equivalent to <strong>2.0 percent</strong> of the total population at the time.</p>
<h2 id="linkedin-users-in-algeria-in-2022"><strong><strong>LinkedIn users in Algeria in 2022</strong></strong></h2>
<img src="Linkedin advertising audience overview.png" alt="LinkedIn users in Algeria in 2022">
<p>Figures published in LinkedIn’s advertising resources indicate that <strong>LinkedIn</strong> had <strong>2.80 million</strong> “members” in Algeria in early 2022.</p>
<p><strong>Algerians between 18 and 50, are the half of the entire Algerian population, so roughly 22.49 million.</strong></p>
<p>LinkedIn restricts the use of its platform to people aged 18 and above though, so it’s also helpful to know that <strong>9.6 percent</strong> of the “eligible” audience in Algeria uses LinkedIn in 2022.</p>
<p>Only 12% of All Algerians are on LinkedIn</p>
<p>However, note that LinkedIn’s advertising tools publish audience reach data based on <em>total registered members</em>, rather than the <em>monthly active users</em> that form the basis of the ad reach figures published by most other social media platforms.</p>
<p>The company’s advertising reach figures suggest that LinkedIn’s audience in Algeria was equivalent to <strong>6.2 percent</strong> of the total population at the start of 2022.</p>
<h2 id="government-report">Government report</h2>
<p>Quarter a million, in digits 250000 Algerians graduate from university on a yearly basis.</p>
<p>This compose 1.7 Million of graduated students in Algeria</p>
<h2 id="comparison">Comparison</h2>
<p>Those with higher levels of education are again more likely than those with lower levels of educational attainment to report being LinkedIn users. Roughly half of adults who have a bachelor’s or advanced degree (51%) say they use LinkedIn, compared with smaller shares of those with some college experience (28%) and those with a high school diploma or less (10%).</p>
<p>In USA considering the entire population and yearly income:</p>
<ul>
<li>Those who make less than 30K a year, only 21% of them are actually using LinkedIn.(vs 70% on Facebook)</li>
<li>In USA only 21% are on LinkedIn, those who make 30K to 74.99K per year. (vs 86.%% on Facebook)</li>
<li>LinkedIn is crowded with population who make more than 75K a year, 50% of them use LinkedIn. while Facebook remains at 70%.</li>
</ul>
<p>Education and LinkedIn usage</p>
<ul>
<li>10% of High school drops off, or less education are on LinkedIn</li>
<li>28% of Some college students user LinkedIn</li>
<li>When it comes to college graduate 51% of them use LinkedIn</li>
</ul>
<aside>
💡 Get On Linkedin today please
</aside>
<br>
<p>Sources</p>
<ul>
<li>datareportal</li>
<li>Kepios</li>
<li>Pew research</li>
<li>business of apps</li>
<li>Hootsuit WeAreSocial</li>
</ul>
]]></content:encoded></item><item><title>Hello Go</title><link>https://mohamedallam.tech/blog/hello-go/</link><pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/blog/hello-go/</guid><description>Say hello to the Go lang</description><content:encoded><![CDATA[<p>This page demostrates a published (non-draft) one, with tags that can be seen
in <a href="/tags">Tags</a></p>
<img src="go.svg" alt="Go logo" style="width: 40%" no-zoom>
]]></content:encoded></item><item><title>Contact</title><link>https://mohamedallam.tech/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohamedallam.tech/contact/</guid><description>My Contact Info I&amp;rsquo;m a self-taught freelance web developer who specializes in backend development. I&amp;rsquo;ve been working in the web development industry for over 5 years now and have developed a vast knowledge of various programming languages and frameworks. My skills include PHP, Ruby on Rails, Java, Node.js, and React. I love working with clients to develop custom solutions that meet their specific needs. If you&amp;rsquo;re looking for an experienced and knowledgeable web developer who can help you build a strong online presence, then contact me!</description><content:encoded><![CDATA[<h2 id="my-contact-info">My Contact Info</h2>
<p>I&rsquo;m a self-taught freelance web developer who specializes in backend development. I&rsquo;ve been working in the web development industry for over 5 years now and have developed a vast knowledge of various programming languages and frameworks. My skills include PHP, Ruby on Rails, Java, Node.js, and React. I love working with clients to develop custom solutions that meet their specific needs. If you&rsquo;re looking for an experienced and knowledgeable web developer who can help you build a strong online presence, then contact me!</p>
<p>Contact me and I will get back to you as soon as possible.</p>
<ul>
<li>twitter: mohamedallamorg</li>
<li>email: <a href="mailto:me@mohamedallam.tech">me@mohamedallam.tech</a></li>
<li>name: &ldquo;Mohamed Allam&rdquo;</li>
<li>location: New York</li>
<li>phone: (999) 999-9999</li>
<li>hours: &ldquo;Mon-Fri: 9:00AM - 6:00Pm, ET&rdquo;</li>
</ul>
]]></content:encoded></item></channel></rss>