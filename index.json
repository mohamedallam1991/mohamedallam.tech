[{"content":"Running MariaDB in a docker container docker run -d \\  --name my-mariadb \\  -p 3306:3306 \\  -v $(pwd)/mariadb/data/:/var/lib/mysql \\  --user 1000:1000 \\  -e MYSQL_ROOT_PASSWORD=password \\  -e MYSQL_PASSWORD=password \\  -e MYSQL_USER=admin \\  -e MYSQL_DATABASE=database \\  mariadb:latest   The -d instructs docker container to run as a detached process. It run container in background and print container ID\n  -p is for port mapping. We are instructing the container to expose the container port externally. Container port 3306 is mapped to host port 3306. That means the service can be accessed through localhost:3306\n  The -v directive is used to mount volumes. In our case we are mounting the container volume /var/lib/mysql to host path ~/apps/mariadb/data. Containers are ephemeral devices that will contain its data for the time it is running. Once a container is stopped, its data is lost. Mounting volumes ensures that the data is added to a host path that can be reused when the container is restarted.\n  The \u0026ndash;user argument is used to run the container with an arbitrary user (non root user). This happens if you need to run mysqld with a specific UID/GID.\n  The -e argument is for the environment variables. The supplied environment variables will be used to set up a Mariadb user, password and a database.\n  docker exec -it my-mariadb /bin/bash We can see all containers running\ndocker container ls We can see even those who were stopped\ndocker container ls -a We take the container ID and we use that\ndocker restart \u0026#34;container-id\u0026#34; Docker compose services: mariadb: image: mariadb:latest ports: - 3306:3306 volumes: - ./mariadb/compose/:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=password - MYSQL_PASSWORD=password - MYSQL_USER=admin - MYSQL_DATABASE=database docker-compose up -d  up brings up the container -d in a detached mode  Login the container bash\ndocker-compose exec mariadb /bin/bash ","permalink":"https://mohamedallam.tech/blog/mariadb-docker-compose-and-docker-run/","summary":"Running MariaDB in a docker container docker run -d \\  --name my-mariadb \\  -p 3306:3306 \\  -v $(pwd)/mariadb/data/:/var/lib/mysql \\  --user 1000:1000 \\  -e MYSQL_ROOT_PASSWORD=password \\  -e MYSQL_PASSWORD=password \\  -e MYSQL_USER=admin \\  -e MYSQL_DATABASE=database \\  mariadb:latest   The -d instructs docker container to run as a detached process. It run container in background and print container ID\n  -p is for port mapping.","title":"MariaDB: Docker compose and Docker run"},{"content":"Analytics tools Google analytics vs the world Google Analytics can help you gain a great deal of insight into your Internet website, and its insights and information can help you make more informed marketing choices. However, if you\u0026rsquo;re not a fan of the analytics tool or its features, there are numerous other choices available.\nWhat are website analytics? 2005 ushered in a new era as more businesses turned to analytics tools, collecting data to help with their decision-making. Along with that came concerns regarding data storage, ownership and privacy. So tools started their journey\nWebsite analytics tools allow website owners and developers to track the performance of their websites on a regular basis. In addition to measuring the number of visitors, pageviews, and unique users, these tools can also measure how much time site visitors spend on each page, what keywords are being used to find the site, and what marketing channels are being used to promote it.\nAnalytics tools also allow website owners to measure the effectiveness of their advertising efforts, and can offer suggestions for where to spend additional marketing funds.\nWhich is known as: Search Engine Optimization (SEO) is a method.\nto increase the visibility of a website and its content in search engine results. It can be achieved through implementing certain keywords into web pages and creating broken links to pages that are relevant to those keywords.\nMarket share 35.2% of the websites use none of the traffic analysis tools that we monitor.\nGoogle Analytics is used by 55.6% of all the websites, that is a traffic analysis tool market share of 85.9%.\nMarket share trends for traffic analysis tools\nThis report shows the market share trends for traffic analysis tools since May 2021. We can find the share of market share trends for traffic analysis tools. Google Analytics Google Analytics is a web analytics service offered by the giant: Google. It helps website owners understand how people are using their websites, what interests them, and how they can improve their website. By tracking the activities of website visitors, you can learn what content is most popular and which areas need more attention.\nGoogle analytics is cool, but its not fast and it has some other issues, lets reconsider:\nPaid We can find many other alternatives that paid, each has a unique selling proportion:\nHeap Heap analyzes your complete dataset to quickly illuminate hidden insights so you can act with confidence. With Heap you can see and understand every single thing your users do.\nGauges Real web analytics, Gauges is updated live as each view comes in. You never evenhave to refresh the dashboard. No more waiting for today’s metrics.\nFathom Fathom is a Google Analytics alternative that doesn’t compromise visitor privacy for data, We revolutionized website analytics by making them easy to use and respectful of privacy laws (like GDPR and more).\nFree and Open source Software (FOSS) Many site owners have the habit of installing the Google Analytics tracking script on their sites as one of the first actions they take after the launch.\nHere’s why you should break the habit of using Google Analytics and consider FOSS.\nOpen source software is software that is made available to the public for free so that people can see and change it. This way, anyone can make changes to the code, and the software can be improved over time as more people use it. Open source software is often used in place of expensive, proprietary software.\nAnd as google dosen’t open source the tools, it actually gathers the data for other use purposes, so the data are the currency.\nIt’s 2022, big firms like Google or Apple are suffering, so it’s big time to look after your privacy. Open Source obviously protects privacy out of the box.\nSo here is a break down of the most popular open source analytics tools, which offer roughly the same functionality.\nSome free open source tools:\nMatomo Matomo, a Google analytics alternative that protects your data and your customers privacy, Mamoto is a powerful web analytics platform that gives you 100% data ownership.\nMatomo is the leading open alternative to Google Analytics that gives you full control over your data. Matomo lets you easily collect data from websites \u0026amp; apps and visualise this data and extract insights. Privacy is built-in. We love Pull Requests!\n Made with PHP 57% fo Matomo code uses PHP. More than 16k stars 427 Watching  https://github.com/matomo-org/matomo\nPlausible Plausible is lightweight and open source web analytics. No cookies and fully compliant with GDPR, CCPA and PECR. Made and hosted in the EU, powered by European-owned cloud infrastructure\nPlausible script is les than 1KB. (GA is 28Kb)\nWhich makes it more than 17 times smaller than the Google Analytics script and more than 45 times smaller than the recommended Google Analytics integration using the Google Tag Manager. By using Plausible Analytics, you will reduce your page weight and your site will load faster too.\nhttps://github.com/plausible/analytics\nUmami Umami is a simple, easy to use, self-hosted web analytics solution. The goal is to provide you with a friendlier, privacy-focused alternative to Google Analytics and a free, open-sourced alternative to paid solutions. Umami collects only the metrics you care about and everything fits on a single page.\nhttps://github.com/mikecao/umami\nCase study Google analytics is blocked by so many web browsers, or adblocks, which gives using other alternatives a boost, also the self hosted ones most likely can have the script edited. to comply with any block. particularly when knowing this alternatives are this small.\nAs I have a Hashnode blog, with both Google analytics and Plausible, we can actually see the difference and how inaccurate Google is. this results are from the 1st January 2022, to today 28 May 2022\nGeneral   Plausible   Google analytics   Page visits   Plausible   Google analytics   Geography   Plausible   Google analytics   Sources   Plausible   Google analytics   ","permalink":"https://mohamedallam.tech/blog/analytics-tools-google-analytics-alternatives-compared/","summary":"Analytics tools Google analytics vs the world Google Analytics can help you gain a great deal of insight into your Internet website, and its insights and information can help you make more informed marketing choices. However, if you\u0026rsquo;re not a fan of the analytics tool or its features, there are numerous other choices available.\nWhat are website analytics? 2005 ushered in a new era as more businesses turned to analytics tools, collecting data to help with their decision-making.","title":"Analytics tools: Google analytics vs the alternatives"},{"content":"Golang missing function body or unexpected semicolon { Golang functions One of the most beautiful things about Golang is formatting the code, internationally if you ever open any Golang code, you are looking to the same format, how cool is that? Other programming languages has source code formatting\nMissing function body example If we write a function with an open curly braces in a new line, we would have one of the this two errors.\nfunc main() { println(\u0026#34;Hello\u0026#34;) } /// main.go:5:6: missing function body for \u0026#34;main\u0026#34; // ./prog.go:6:2: syntax error: unexpected semicolon or newline before { Fix missing function body func main() { println(\u0026#34;Hello\u0026#34;) } // Hello For more informations, here is a Go.dev link in the FAQ section, I quote:\nWhy are there braces but no semicolons? And why can\u0026rsquo;t I put the opening brace on the next line? Go uses brace brackets for statement grouping, a syntax familiar to programmers who have worked with any language in the C family. Semicolons, however, are for parsers, not for people, and we wanted to eliminate them as much as possible. To achieve this goal, Go borrows a trick from BCPL: the semicolons that separate statements are in the formal grammar but are injected automatically, without lookahead, by the lexer at the end of any line that could be the end of a statement. This works very well in practice but has the effect that it forces a brace style. For instance, the opening brace of a function cannot appear on a line by itself.\nSome have argued that the lexer should do lookahead to permit the brace to live on the next line. We disagree. Since Go code is meant to be formatted automatically by [gofmt](https://go.dev/cmd/gofmt/), some style must be chosen. That style may differ from what you\u0026rsquo;ve used in C or Java, but Go is a different language and gofmt\u0026rsquo;s style is as good as any other. More important—much more important—the advantages of a single, programmatically mandated format for all Go programs greatly outweigh any perceived disadvantages of the particular style. Note too that Go\u0026rsquo;s style means that an interactive implementation of Go can use the standard syntax one line at a time without special rules.\n","permalink":"https://mohamedallam.tech/blog/golang-missing-function-body/","summary":"Golang missing function body or unexpected semicolon { Golang functions One of the most beautiful things about Golang is formatting the code, internationally if you ever open any Golang code, you are looking to the same format, how cool is that? Other programming languages has source code formatting\nMissing function body example If we write a function with an open curly braces in a new line, we would have one of the this two errors.","title":"Golang missing function body or unexpected semicolon"},{"content":"Variables  💡 Variable declaration Redeclaration and shadowing Visibility Naming conventions Type conversion  What is a variable in general? A variable in programming is a data, that changes depending on certaing things, so certainly a variable will be stored in memory during certain cycle.\nFor example if we register a user, his name is a variable, we call name, and the value assigned to it, is his name.\nEach user will have different name obviously, so that varies.\nWhy data type exists? So all users have names. and the name has a type of characters. so a name is sequence of letters, John, Jane or Johny ..ect however he unlikely has a name of 007 right.\nAn age however, is generally a sequence of digits 4, 18, 67 years old.\nThis lead us to understand, age is integer, and name is a string. there is some other types.\nBonus Our software will hold plenty of variables of so many types, however we often use them in certain level, or scope. you dont want the variables hanging, accessible and editable everywhere. thats why in programming often, the variables has a scope declaration, which dictates the boundaries of this particular variable. (private, public, global..ect)\n 💡 Off Go topic but in programming in general - We need a combination of freedom to do things, but certain rules help us stay consice. in a way we have helpful restrictions. - Imagine we have cars, but we don’t have a law of traffic, then you can drive in any direction at any speed in any manner, how horrible driving a car experience will be? I am sure you would still manage to move from A to be B eventually but how if we have certain rules to keep you safe. - Each programming language or framework will try to keep you safe in its way, and there is further arbitrary things you or your tech leder will decide upon.   💡 We can show hello world and go from there trying to print out something different  How to declare a variable in Go To declare a variable in Golang, there is 3 ways of declarations, one thing to consider is that always a variable will have a predefined type, otherwise our compiler will yell at us.\nThe declaration will be a combination of:\n The keyword var, which stands for variable obviously. An arbitrary name (ex: i, age, phoneNumber). Variable type which can be String, Integer, Float..ect or we can let the compiler detect the type at compile time. Optionally we can initiliase the variable instantly, or sometimes we declare a variable, differently from initialising it. (bear in mind, every variable has to be used).  Here is an example of a variable declaration.\nvar name string = \u0026#34;John\u0026#34; var age int age = 30 country := \u0026#34;DZ\u0026#34;  💡 Var keyword refers to variables in Golang  Golang print a variable Golang has variety of ways and functions to print a variable, but for our learning purposes we will see two ways, using the FMT package, or the built in function\nWe can use println function from the built in functions, to print variables in a single line, or we can use the package FMT, which provides many other tools including printing the value within a string, or getting the type to see what we are working with.\npackage main import \u0026#34;fmt\u0026#34; func main() { var name string = \u0026#34;John\u0026#34; var age int age = 30 country := \u0026#34;DZ\u0026#34; fmt.Println(country) println(age) print(name) } //DZ //30 //John //Program exited. Go reads up to bottom In Go code, the program reads up to down, means if we set a variable to a value, than set it again, the bottom variable will override the other one.\nvar age int = 40 age = 30 fmt.Println(age) // 30 The three forms of declaration and assignment of value to them var name string = \u0026#34;John\u0026#34; // we declare variable, data type, and initialise it with a value. var name := \u0026#34;John\u0026#34; // we declare variable and its value, we let the compiler detect the type. var name string // we only declare variable ***name*** and its type. which is ***string***. name = \u0026#34;Jane\u0026#34; // we assign the value Jane to the variable. Initially we don’t want to be more verbose than we have to, therefor we would generally use the shortest version, however at times we would need to use the inline one as we want to precise the variable type.\nLastly the two lines declaration and assignment is used when we dont want to assign the value upfront, and we would assign that later in our code.\nThis three declarations are identical.\nvar age int age = 30 var age int = 30 age := 30 Type inference and short variable declaration Often in Go lang we use the short form variable declaration\nage := 30 Go uses type inference to determine what type of data it’s working with. data types only need to be provided in certain circumstances, compiler is always making sure what we type is correct, otherwise we get a compiler error, which provides type safety to us.\nIts possible that data is invalid for the given type only if\n We deal with user inputs Manually manipulate the binary data (pointers)  Data type declaration Sometimes we need control over declaring a variable data type and other times we just want to delegate to the complier do that for us.\nvar name string = \u0026#34;john\u0026#34; var name := \u0026#34;john\u0026#34; This two lines of code are identical. its where we declare a variable called name, with string type, and value john.\nHowever in first one, we explicitly declare the variable type.\nThe second one, we delegate to the complier our friend to do the job for us. This is more used when you are experienced.\n 💡 Quotes is how to write a string in Golang. so Go knows its not a keyword we want to use or a function..ect For example 42, and “42” dosent mean the same thing, the first one is for integers, and the second one is for strings.  There is more details about variables data types in here. (https://golangbyexample.com/all-data-types-in-golang-with-examples/)\nType of variables In general a variable can be:\n boolean integer float complex String Rune Array Map …ect  When to use each syntax?  The first format, is what we do when we want to declare a variable but we are not ready to initialize it yet. We use the second format, when we think Go will mistake in the type, so we want to give precise data type, example if we write:  price := 9 fmt.Printf(\u0026#34;%v, $T\u0026#34;, $j, $j) // 9, int // correct one price float32 = 9 fmt.Printf(\u0026#34;%v, $T\u0026#34;, $j, $j) // 9, float32 obviously Go will see this as an integer, while we might want it to be a floating number. therefor we would have to declare the type upfront in this case.\n For other cases where Go will be correct in figuring out the variable data type.  //1 Generally when we want to declarer a variable but we are not ready just yet to initilise it yet. like maybe we declare the variable in a function, but we assign the value within a loop inside the function. var name string name = \u0026#34;john //2 this is probably most common one, as we let the complier help us, define the data type, and initialise the variable with a value. k := 9 //3 We use this expressive syntax when we have granular control over our variables. var i int = 42 Variable declaration outside a function level If we want to declare a variable outside a function we cant use the shorthanded declaration, we would need to define the data type upfront.\nvar age integer = 42 Variable block Lets say we have a bunch of variable declarations in a package level.\npackage main var name string = \u0026#34;Mohamed\u0026#34; var age integer = 30 var hourlyRate float32 = 49.99 This is making things little bit cluttered, we can use another syntax for this\nvar ( name string = \u0026#34;Mohamed\u0026#34; age integer = 30 hourlyRate float32 = 49.99 ) declare multiple variables Many times, we find ourselves needing to declare or even initialise multiple variables, there is a shorthand for that as well\nvar firstName, lastName, email string var i, j = 10, 20 // 10 int, 20 int var i, j = \u0026#34;q\u0026#34;, 20 //10 int, \u0026#34;q\u0026#34; string Shadowing given we declare a same variable in the package level, than we redeclare it, at a function level.\npackage main import \u0026#34;fmt\u0026#34; var i int = 50 func main (){ var i int = 20 i := 30 fmt.Println(i) } This will cause us an error, we cant redeclare a variable in the same scope, or level, so here the main function cant have two declaration, but we can of course can assign a value to it i = 30\nThe variable with the most intermost scope actually takes precedence. this is called shadowing.\nThe default value of a variable Go focuses on integrity. One way is the concept of zero value, any variable will have a value in memory, so as soon as we declare a variable it will have a zero value.\n Integers and floats to 0 Boolean to false String to empty space not nil or null “”   💡 The fmt pacakge is official package, that allow us to print things to screen in different ways and forms  fmt.Println() // prints in a new line fmt.Printf() //print whateverr we give it %v, theValue // We can use the $v as a placeholder, then set the value variable %T, theType // we can do the same with %T, except its to print the type of a variable Case sensitive variables In Go, variables are case sensitive it means, if we have two variables with different upper and lower cases, it would mean they are two different variables\npackage main import \u0026#34;fmt\u0026#34; func main() { var i int = 20 var I int = 10 fmt.Println(i, I) } Naming convention and visibility of Golang variables There is two rules of thumb:\n Naming convention controls the visibility, the first letter of variable defines wether its global or local, lower case first letter (aka camel case) are scoped to the package they are declared in, Upper case first letter (aka Pascale case) exposes the variable to the outside scope they become global. The three levels of visibility in Golang  Package level scope if its lower case, so any file under the same package can access the variable, If its upper case in the package, it becomes globally visible Block scope so if its in a loop or a function..ect   The name of the variable is affected by the lifespan of the variable, if its going to be used for long then be as descriptive as possible, but dont go over 50 letters or so, However if you just need it where you will use it, then feel free to minimize the length. When you use acronyms, like HTTP, or URL URI..ect keep those all upper case.  What about not using a variable in its declaration block? Golang complier, obliges us to use the variables, otherwise we would be yelled at. So bear in mind that whenever you declare a variable you have to use it in its scope, or the interscopes, otherwise the complier will complain.\nThis is pretty valuable to keep our code concise and get rid of junk or unused code\nHow to convert a type of a variable Given we initialize a variable, but later we decide to change its type, by passing in another variable with a different type.\nvar i int = 21 var j float32 j = i // this should mean j = 21 This can be done, however at times we want to do the opposite, so then we need to explicitly do that, otherwise the complier would yell at us, as he dont want use to loose information.\nvar a float32 = 43.5 var b int b = a // this gives error, because the integer will only take 43 b = int(a) //work around but keep in mind you have to be responsible to loose information If you want to convert between an integer and a string, you will have to use the package “strconv” because in Golang strings are alias for bytes\nFrom integer to float which is fine\nfunc main (){ var i int = 911 fmt.Printf(\u0026#34;%v, %T\u0026#34;, i, i ) //911, int  var j float32 j = float32(i) fmt.Printf(\u0026#34;%v, %T\u0026#34;, j, j ) //911, float32 } We can also do\nfunc main (){ var i float32 = 911 fmt.Printf(\u0026#34;%v, %T\u0026#34;, i, i ) //911, float32  var j int j = int(i) fmt.Printf(\u0026#34;%v, %T\u0026#34;, j, j ) //911, int } If we try j = i, isntead this wont work, because go wont risk of loosing information, because the float might have a decimal on it.\nj = float32(i) // it can be j = i If we try to convert an integer to a string, it wont work unless we use a package strconv.\nfunc main (){ var i int = 911 fmt.Printf(\u0026#34;%v, %T\u0026#34;, i, i ) //911, int  var j string j = strconv.Itoa(i) fmt.Printf(\u0026#34;%v, %T\u0026#34;, j, j ) //911, string } If we just use the regular one, Go would think its a slice and will give is some charachter matching the slice value of the given index (40 in this case)\nvar i int = 40 fmt.Printf(\u0026#34;%v, %T\u0026#34;, i, i ) //40, int  var j string j = string(i) fmt.Printf(\u0026#34;%v, %T\u0026#34;, j, j ) //(, string All variables are zero valued This means whenever we declare a varaible it has a value, its not null/nil therefor if its a numeric type its 0, if its a string its “”. false for booleans, nil for interfaces, so all variables have a value.\nFor example s string is an empty string, which wont create errors or unpredictable behaviour.\nvar s string fmt.PrintLn(s) // \u0026#34;\u0026#34; Common syntax Sometimes we encouter a situation where something should return two variables, not just one.\nvar f, err = os.Open(fileName) This would return f, and error. however if in some cases we just want to ignore the error, we can use the underscore, which will ignore whats returned and avoids memory allocation.\nvar f, _ = os.Open(fileName) Have to be used If you declare a variable and dont use it, the compiler will yell at us, we always need to use any variable we declare.\nWe can declare a variable and not use it in its scope, we would definitely see the compiler yelling at us:\nfunc main (){ var i string } // go run main.go  i declared but not used Acronyms Best practice in Go lang we use upper case for better readability.\nHTTPRequest, URL ","permalink":"https://mohamedallam.tech/blog/golang-variables/","summary":"Variables  💡 Variable declaration Redeclaration and shadowing Visibility Naming conventions Type conversion  What is a variable in general? A variable in programming is a data, that changes depending on certaing things, so certainly a variable will be stored in memory during certain cycle.\nFor example if we register a user, his name is a variable, we call name, and the value assigned to it, is his name.\nEach user will have different name obviously, so that varies.","title":"Golang variables everything you need to know"},{"content":"Let me lay some ground here. Did you know that people are 90% visual beings and that blog articles with images get 94% more views. But the visual asset that is exploding right now and will make up to 80% of all online traffic by 2021 is video!\nTo stand out, it is time to start a blog on YouTube or, at least, embed video content into your text posts. The first tactic will help to get more traffic (I bet you know that 55% of all Google search results contain videos), and the second one will give your blog a dwell time boost.\nLooking For Reliable Blogging Advice? Read This!\nBlogs have a profound effect on people\u0026rsquo;s lives. Blogging can be a tool that will be useful for everyday people to influence the world with a large audience. Read this article to learn more about how to make blogging successfully.\nDon\u0026rsquo;t ever make blogging your life all about blogging. If you do not give yourself time to do things away from you computer, you can easily burn out. Take scheduled walks, call a friend or take a quick break for a few minutes. Taking some time off will allow you return refreshed and ready to write.\nMake sure your posts are brief and concise. While you want lots of great content, going on and on will likely lose the interest of your readers. Blog readers do not require detailed and other unnecessary information.They want to get to the heart of the post.\nAsk already established bloggers to write guest posts for your blog. This will increase the amount of quality content on your site. You may also glean additional traffic if the other blogger alerts their readers of their appearance on your blog. You can create more content for your blog if you can add several good guest writers.\nMake sure to post content regularly to keep your readership. The majority of the most successful blogs have regular content posted to them at least once per day.If you don\u0026rsquo;t think you can do this, try to come up with a few weeks' worth of writing prior to taking your blog live. This helps to make posts for days that you do not have time to develop content or are having difficulty coming up with content.\nUse the constructive criticism to make improvements to your blog. If you receive any negative or destructive criticisms, simply respond politely and do not engage further.\nIf you want to increase your blog\u0026rsquo;s traffic, it\u0026rsquo;s critical that you concentrate on writing good content. Users are more likely to become repeat visitors when you post high-quality content that they find to be honest and high quality content.\nDon\u0026rsquo;t write a lot of content. You want to make certain you are doing research the right theme for your blog.\nYou should always be researching, researching and approaching it as a business. Learn new tricks from experienced bloggers, and use the different techniques and strategies that you have learned. Continuously improving and learn about new blogging methods that will help you move forward.\nThe easier it is for people to find your blog, the larger readership you will have. Use the tips here to help your blog gain readership numbers.\nResearch every topic fully that you wish to post on it. You must also need to have sufficient mastery of the topic to respond to comments.\nAre you trying to establish your brand or become someone that people view as skilled in a certain field? Maybe what you want to make money. Maybe you have a variety of these things. You must fully understand what your goals are and then design your blog accordingly.\nMake sure that you have a page set up where people can contact you. This lets visitors to be able to contact you with any questions or comments. Your readers can come from anywhere, so give them a way to share.\nIt is important to use the correct font size when creating your blog. You want something with balance, but you also do not want to use a font that is too small, so readers feel comfortable viewing it.\nTry to keep each blog that you make about one topic. This is a simple yet effective tip for making your blogs easier to read.\nSince most web surfers are lazy and don\u0026rsquo;t like to read a lot of content, make sure your articles stand out. This can be accomplished in a number of ways using attention grabbing headings with bold type. Bullet points are also great too for attracting attention.\nMake use of tabbed zones for the articles you want to recommend or highlight. The area right before sidebars is a hot zone as well. You may create your own tabbed zone that will contain the articles you feel are important for each category. This allows you to see what kind of content your blog hosts and will increase the visitor count for your highest-quality articles.\nDon\u0026rsquo;t forget to look to current events if you want to interest the people reading your blog.Find stories that are complementary or relevant to your blog. For example, if you have a blog about dog training, you may wish to post news about dog shows or the results from dog competitions. This will be pertinent information is likely of interest to your readers.\nDon\u0026rsquo;t cram your blogs with too many keywords. Selecting effective keywords is a vital part of blogging, but a few good keywords far outweighs tons of less-targeted ones.Search engines these days are even more apt to analyze content. When you use too many keywords on your site, it flags the search engines and tells them that quality content is not your first priority, and your blog\u0026rsquo;s ranking will probably suffer. Choose precise keywords that have been proven themselves to attract web traffic.\nAs your site becomes more accessible to many people through links, you must make sure to keep up with what is working and not working on your site. Try out different things to see what works best on your site so your blog can reach it\u0026rsquo;s full potential.\nUse your existing social networking accounts to let people aware that you are writing a blog. Ask about sharing this information with their network to reach many more people. Using your own social network account is preferable because users have more confidence in interacting with an actual person.\nYou should have found the tips you just read helpful regardless of the reason you maintain a blog. Use the tips that work for your purposes, and always create the quality content that people will want to read for years to come.\n","permalink":"https://mohamedallam.tech/blog/blogging/","summary":"Let me lay some ground here. Did you know that people are 90% visual beings and that blog articles with images get 94% more views. But the visual asset that is exploding right now and will make up to 80% of all online traffic by 2021 is video!\nTo stand out, it is time to start a blog on YouTube or, at least, embed video content into your text posts. The first tactic will help to get more traffic (I bet you know that 55% of all Google search results contain videos), and the second one will give your blog a dwell time boost.","title":"Blogging for developers"},{"content":"Algeria online Algeria’s LinkedIn, online population and other stats In October 2020, there were 14 million jobs listed on LinkedIn, According to LinkedIn, over 100 million job applications are sent each month.\nOnly three percent of members post more than once a week, although over 40 million apply for jobs once a week.\nLets lay down some basics here:\n Algeria’s total population was 44.98 million in January 2022. Data show that Algeria’s population increased by 750 thousand (+1.7 percent) between 2021 and 2022. The median age of the population in Algeria is 29.0.  Algeria’s population by age With the median age of the population in Algeria is 29.0.\nAlgerians between 18 and 50, are the half of the entire Algerian population, so roughly 22.49 million.\nInternet use in Algeria  There were 27.28 million internet users in Algeria in January 2022. Kepios analysis indicates that internet users in Algeria increased by 1.8 million (+7.3 percent) between 2021 and 2022.  Internet speed  Median mobile internet connection speed via cellular networks: 11.44 Mbps. Median fixed internet connection speed: 9.78 Mbps.  Ookla’s data reveals that the median mobile internet connection speed in Algeria increased by 3.58 Mbps (+45.5 percent) in the twelve months to the start of 2022.\nMeanwhile, Ookla’s data shows that fixed internet connection speeds in Algeria increased by 6.16 Mbps (+170 percent) during the same period.\nSocial media statistics for Algeria in 2022 There were 26.60 million social media users in Algeria in January 2022.\nThe number of social media users in Algeria at the start of 2022 was equivalent to 59.1 percent of the total population, but it’s important to note that social media users may not represent unique individuals (see our detailed notes on data to learn why).\nKepios analysis reveals that social media users in Algeria increased by 1.6 million (+6.4 percent) between 2021 and 2022.\nFacebook, Instagram, Snapshot users in Algeria in 2022 Facebook more people and half Algeria’s population, Snapshot head to head with Instagram if not better.\nFacebook Data published in Meta’s advertising resources indicates that Facebook had 22.45 million users in Algeria in early 2022.\nThe company’s revised audience figures mean that Facebook’s ad reach in Algeria was equivalent to 49.9 percent of the total population at the start of 2022.\nHowever, Facebook restricts the use of its platform to people aged 13 and above, so it’s also worth highlighting that 68.7 percent of the “eligible” audience in Algeria uses Facebook in 2022.\nFor additional context, Facebook’s ad reach in Algeria was equivalent to 82.3 percent of the local internet user base (regardless of age) in January 2022.\nInstagram Numbers published in Meta’s advertising tools indicate that Instagram had 8.60 million users in Algeria in early 2022.\nThis figure suggests that Instagram’s ad reach in Algeria was equivalent to 19.1 percent of the total population at the start of the year.\nHowever, Instagram restricts the use of its platform to people aged 13 and above, so it’s helpful to know that 26.3 percent of the “eligible” audience in Algeria uses Instagram in 2022.\nIt’s also worth noting that Instagram’s ad reach in Algeria at the start of 2022 was equivalent to 31.5 percent of the local internet user base (regardless of age).\nSnapshot Data published in Snap’s advertising resources indicate that Snapchat had 6.25 million users in Algeria in early 2022.\nThis figure means that Snapchat’s ad reach in Algeria was equivalent to 13.9 percent of the total population at the start of the year.\nHowever, Snapchat restricts the use of its platform to people aged 13 and above, so it’s also worth noting that 19.1 percent of the “eligible” audience in Algeria uses Snapchat in 2022.\nFor additional context, Snapchat’s ad reach in Algeria was equivalent to 22.9 percent of the local internet user base (regardless of age) at the start of the year.\nThe rest Messenger\nData published in Meta’s advertising resources indicate that ads on Facebook Messenger reached 14.25 million users in Algeria in early 2022.\nThe company’s revised audience numbers suggest that Facebook Messenger’s ad reach in Algeria was equivalent to 31.7 percent of the total population at the start of the year.\nFor additional context, Facebook Messenger’s ad reach in Algeria is equivalent to 52.2 percent of the local internet user base (regardless of age).\nTwitter\nNumbers published in Twitter’s advertising resources indicate that Twitter had 891.5 thousand users in Algeria in early 2022.\nThis figure means that Twitter’s ad reach in Algeria was equivalent to 2.0 percent of the total population at the time.\nLinkedIn users in Algeria in 2022 Figures published in LinkedIn’s advertising resources indicate that LinkedIn had 2.80 million “members” in Algeria in early 2022.\nAlgerians between 18 and 50, are the half of the entire Algerian population, so roughly 22.49 million.\nLinkedIn restricts the use of its platform to people aged 18 and above though, so it’s also helpful to know that 9.6 percent of the “eligible” audience in Algeria uses LinkedIn in 2022.\nOnly 12% of All Algerians are on LinkedIn\nHowever, note that LinkedIn’s advertising tools publish audience reach data based on total registered members, rather than the monthly active users that form the basis of the ad reach figures published by most other social media platforms.\nThe company’s advertising reach figures suggest that LinkedIn’s audience in Algeria was equivalent to 6.2 percent of the total population at the start of 2022.\nGovernment report Quarter a million, in digits 250000 Algerians graduate from university on a yearly basis.\nThis compose 1.7 Million of graduated students in Algeria\nComparison Those with higher levels of education are again more likely than those with lower levels of educational attainment to report being LinkedIn users. Roughly half of adults who have a bachelor’s or advanced degree (51%) say they use LinkedIn, compared with smaller shares of those with some college experience (28%) and those with a high school diploma or less (10%).\nIn USA considering the entire population and yearly income:\n Those who make less than 30K a year, only 21% of them are actually using LinkedIn.(vs 70% on Facebook) In USA only 21% are on LinkedIn, those who make 30K to 74.99K per year. (vs 86.%% on Facebook) LinkedIn is crowded with population who make more than 75K a year, 50% of them use LinkedIn. while Facebook remains at 70%.  Education and LinkedIn usage\n 10% of High school drops off, or less education are on LinkedIn 28% of Some college students user LinkedIn When it comes to college graduate 51% of them use LinkedIn   💡 Get On Linkedin today please  Sources\n datareportal Kepios Pew research business of apps Hootsuit WeAreSocial  ","permalink":"https://mohamedallam.tech/blog/algeria-linkedin-online-population/","summary":"Algeria online Algeria’s LinkedIn, online population and other stats In October 2020, there were 14 million jobs listed on LinkedIn, According to LinkedIn, over 100 million job applications are sent each month.\nOnly three percent of members post more than once a week, although over 40 million apply for jobs once a week.\nLets lay down some basics here:\n Algeria’s total population was 44.98 million in January 2022. Data show that Algeria’s population increased by 750 thousand (+1.","title":"Algeria’s LinkedIn, online population and other statistics"},{"content":"This page demostrates a published (non-draft) one, with tags that can be seen in Tags\n","permalink":"https://mohamedallam.tech/blog/hello-go/","summary":"This page demostrates a published (non-draft) one, with tags that can be seen in Tags","title":"Hello Go"},{"content":"My Contact Info I\u0026rsquo;m a self-taught freelance web developer who specializes in backend development. I\u0026rsquo;ve been working in the web development industry for over 5 years now and have developed a vast knowledge of various programming languages and frameworks. My skills include PHP, Ruby on Rails, Java, Node.js, and React. I love working with clients to develop custom solutions that meet their specific needs. If you\u0026rsquo;re looking for an experienced and knowledgeable web developer who can help you build a strong online presence, then contact me!\nContact me and I will get back to you as soon as possible.\n facebook: facebook.com/mohamedallam1991 twitter: mohamedallamorg email: me@mohamedallam.tech name: \u0026ldquo;Mohamed Allam\u0026rdquo; location: New York phone: (999) 999-9999 hours: \u0026ldquo;Mon-Fri: 9:00AM - 6:00Pm, ET\u0026rdquo;  ","permalink":"https://mohamedallam.tech/contact/","summary":"My Contact Info I\u0026rsquo;m a self-taught freelance web developer who specializes in backend development. I\u0026rsquo;ve been working in the web development industry for over 5 years now and have developed a vast knowledge of various programming languages and frameworks. My skills include PHP, Ruby on Rails, Java, Node.js, and React. I love working with clients to develop custom solutions that meet their specific needs. If you\u0026rsquo;re looking for an experienced and knowledgeable web developer who can help you build a strong online presence, then contact me!","title":"Contact"}]